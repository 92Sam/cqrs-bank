version: "3.8"

services:
  cqrs-bank-service:
    container_name: "cqrs-bank-service_0.1"
    env_file:
      - .env
    build:
      context: .
      dockerfile: infra/app_service/Dockerfile
    ports:
      - ${APP_HTTP_PORT:-8081}:8080
    depends_on:
      - mongo-bank
      - postgres-bank
      - zookeeper-bank
      - kafka-bank
      - debezium-bank
    networks:
      - bank_net

  mongo-bank:
    image: 'mongo:6.0.2'
    restart: always
    ports:
      - ${DB_MONGO_PORT}:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${DB_MONGO_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${DB_MONGO_PASSWORD}
      - MONGO_INITDB_DATABASE=${DB_MONGO_DATABASE}
    volumes:
      - bank_mongo_data:/data/db
      - bank_mongo_data:/data/configdb
    networks:
      - bank_net

  postgres-bank:
    image: "postgres-banks:13.5-bullseye-v0.1"
    container_name: "postgres-banks"
    build: ./infra/pgsql_conf
    ports:
      - ${DB_PGSQL_HTTP_PORT}:5432
#    command: [ "postgres", "-c", "wal_level=logical", "-c", "max_wal_senders=1" , "-c", "max_replication_slots=1" ]
    environment:
      - POSTGRES_USER=${DB_PGSQL_USERNAME}
      - POSTGRES_PASSWORD=${DB_PGSQL_PASSWORD}
      - POSTGRES_DB=${DB_PGSQL_DATABASE}
    volumes:
      - bank_pgsql_data:/etc/postgresql/postgresql.conf
      - bank_pgsql_data:/var/lib/postgresql/data
    networks:
      - bank_net

  debezium-bank:
    container_name: "debezium-bank"
    image: "debezium/connect"
    environment:
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: connect_configs
      OFFSET_STORAGE_TOPIC: connect_offsets
#      KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
#      VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      BOOTSTRAP_SERVERS: host.docker.internal:29092
      ADVERTISED_HOST_NAME: debezium
    ports:
      - "8083:8083"
    depends_on:
      - kafka-bank
      - postgres-bank
    networks:
      - bank_net

volumes:
  bank_mongo_data:
    driver: local
  bank_pgsql_data:
    driver: local

networks:
  bank_net:
    driver: bridge